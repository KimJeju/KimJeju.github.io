

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Kimjeju</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2023-12-21T20:49:33+09:00</updated>
  <author>
    <name>Kimjeju</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="kr"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator>
  <rights> © 2023 Kimjeju </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>mac 환경에 Django 세팅하기</title>
    <link href="http://localhost:4000/posts/mac-django-setting/" rel="alternate" type="text/html" title="mac 환경에 Django 세팅하기" />
    <published>2023-12-20T00:00:00+09:00</published>
  
    <updated>2023-12-21T00:01:22+09:00</updated>
  
    <id>http://localhost:4000/posts/mac-django-setting/</id>
    <content src="http://localhost:4000/posts/mac-django-setting/" />
    <author>
      <name>Kimjeju</name>
    </author>

  
    
    <category term="Python" />
    
    <category term="Django" />
    
  

  
    <summary>
      





      Mac 환겅

  
    M2 맥북 에어
    mac os Sonoma 14.2
    python 3.9.6
    터미널 zsh

  




1.Python 설치하기

  
    
      pythone 설치 여부 확인

    
    깔려있지 않다면 아래 링크에서 설치하기
      
        python 공식 다운로드 (필자 3.9.6 설치)
        python 공홈
      
    
    python3 명령어를 python 으로 바꾸기 위해 환경변수 설정
      
        터미널에서 vi~/.zshrc 실행 후 아래 코드 입력
        vi 환경에서 a 를 눌러 input 환경으로 만든 후 맨 아레에 작성 후 esc 누르고 wq( 입력저장 )로 빠져나...
    </summary>
  

  </entry>

  
  <entry>
    <title>리액트 프로젝트 깃허브 페이지로 배포하기</title>
    <link href="http://localhost:4000/posts/react-deploy-github-page-copy/" rel="alternate" type="text/html" title="리액트 프로젝트 깃허브 페이지로 배포하기" />
    <published>2023-12-17T00:00:00+09:00</published>
  
    <updated>2023-12-17T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/react-deploy-github-page-copy/</id>
    <content src="http://localhost:4000/posts/react-deploy-github-page-copy/" />
    <author>
      <name>Kimjeju</name>
    </author>

  
    
    <category term="Blog" />
    
    <category term="gitblog" />
    
  

  
    <summary>
      





      리액트 프로젝트 깃 허브 페이지 배포 step


  gh-page 라이브러리 설치하기
  
    
      본인의 패키지에 맞게 아래 두 커맨드 리액트 프로젝트 폴더 cmd 에서 실행
    
    npm install gh-pages –save
    yarm install gh-pages 

npm install gh-pages –save 실행화면
  





  package.json 파일에 본인의 레파지토리 주소 및 npm script 추가하기
  
    
      package.js 최상단의   “homepage”: “https://{본인 깃허브 이름}.github.io/{본인 레포지토리 이름}/” 작성

package.json 에 깃주소 추가
    
    
      scri...
    </summary>
  

  </entry>

  
  <entry>
    <title>chirpy 템플릿 프로필 image url 설정하기</title>
    <link href="http://localhost:4000/posts/react-image-url-modify-copy/" rel="alternate" type="text/html" title="chirpy 템플릿 프로필 image url 설정하기" />
    <published>2023-12-15T00:00:00+09:00</published>
  
    <updated>2023-12-18T00:20:47+09:00</updated>
  
    <id>http://localhost:4000/posts/react-image-url-modify-copy/</id>
    <content src="http://localhost:4000/posts/react-image-url-modify-copy/" />
    <author>
      <name>Kimjeju</name>
    </author>

  
    
    <category term="Blog" />
    
    <category term="gitblog" />
    
  

  
    <summary>
      





      chirpy 템플릿 Image Url 설정하기

깃 블로그를 만드는 도중 avarta 와 image가 올라가지 않는 현상이 발생해서
원인을 찾고 Url를 설정해서 이미지를 올리는 작업 진행




  ■ Image 가 올라가지 않은 원인
  
    Config.yml 의 이미지 기본 url 이 “https://chirpy-img.netlify.app” 으로 설정 되어있음
    “assets/img/[source]” 로 img url을 설정해도 “ “https://chirpy-img.netlify.app/assets/~ 으로 설정됨”
  







  ■ 해결
  
    Config.yml 의 이미지 기본 url 수정
    Config_yml 62번줄 수정
  


Config.yml 수정부분...
    </summary>
  

  </entry>

  
  <entry>
    <title>동적 웹페이즈 사이즈 계산</title>
    <link href="http://localhost:4000/posts/react-dynamic-width/" rel="alternate" type="text/html" title="동적 웹페이즈 사이즈 계산" />
    <published>2023-12-12T00:00:00+09:00</published>
  
    <updated>2023-12-13T00:33:02+09:00</updated>
  
    <id>http://localhost:4000/posts/react-dynamic-width/</id>
    <content src="http://localhost:4000/posts/react-dynamic-width/" />
    <author>
      <name>Kimjeju</name>
    </author>

  
    
    <category term="Dev" />
    
    <category term="react" />
    
  

  
    <summary>
      





      동적 웹 페이지 크기 계산해보기

포트폴리오를 만드는 도중 OverFlow : scroll 이 두개의 컴포넌트에서 각각 작동하다보니
width가 작아짐에 따라 후자 컴포넌트가 원하는 대로 작동하지 않는 현상이 발생하였다.

이를 해결하기 위해 UseEffect를 사용하여 현재 웹페이지의 크기를 동적으로 계산하여 
조건문을 통하여 동적 컴포넌트 랜더링을 진행하였다.




  ■ UseEffect를 사용하여 현재 웹페이지의 크기 동적 계산
  
    UseState 를 사용하여 현재 웹페이지값 상태로 저장
    자바 스크립트 내장함수 window를 통하여 width값을 가져왔다.
  




코드

function MyCareer() {

    const [innerWidth, setInnerWid...
    </summary>
  

  </entry>

  
  <entry>
    <title>리액트 모달 만들어보기</title>
    <link href="http://localhost:4000/posts/react-create-modal/" rel="alternate" type="text/html" title="리액트 모달 만들어보기" />
    <published>2023-12-10T00:00:00+09:00</published>
  
    <updated>2023-12-13T00:33:02+09:00</updated>
  
    <id>http://localhost:4000/posts/react-create-modal/</id>
    <content src="http://localhost:4000/posts/react-create-modal/" />
    <author>
      <name>Kimjeju</name>
    </author>

  
    
    <category term="Dev" />
    
    <category term="react" />
    
  

  
    <summary>
      





      포트폴리오 경력사항 작성을 위한 모달 창 구현해보기




  ■ 상태 라이브러리를 통한 show 모달 상태 관리
  
    UseState 를 사용하여 모달에 show 여부를 저장
    showModal 함수와 button을 통해 show modal 이벤트 트리거 발생 시키기
  




코드

function Intro()
{
    //Modal 영역
    const [ openModal, setOpenModal ] = useState(false);

    //모달의 open, hide 속성을 담당할 메서드
    function showModal(){
        //console.log 로 이벤트 발생 여부 확인해보기
        alert("모달 이벤트 발생");
        s...
    </summary>
  

  </entry>

</feed>


