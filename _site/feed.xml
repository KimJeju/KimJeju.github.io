

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>http://localhost:4000/</id>
  <title>Kimjeju</title>
  <subtitle>A minimal, responsive and feature-rich Jekyll theme for technical writing.</subtitle>
  <updated>2023-12-27T15:26:47+09:00</updated>
  <author>
    <name>Kimjeju</name>
    <uri>http://localhost:4000/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="http://localhost:4000/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="kr"
    href="http://localhost:4000/"/>
  <generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator>
  <rights> © 2023 Kimjeju </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Django Model 마이그레이션 해보기</title>
    <link href="http://localhost:4000/posts/django-db-migration-copy/" rel="alternate" type="text/html" title="Django Model 마이그레이션 해보기" />
    <published>2023-12-27T00:00:00+09:00</published>
  
    <updated>2023-12-27T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/django-db-migration-copy/</id>
    <content src="http://localhost:4000/posts/django-db-migration-copy/" />
    <author>
      <name>Kimjeju</name>
    </author>

  
    
    <category term="Python" />
    
    <category term="Django" />
    
  

  
    <summary>
      





      Mac 환겅

1.Python 설치하기

  
    models.py 에 모델 클래스 정의

  





2.manage.py 가 있는 폴더에서 마이그레이션 만들기



  python manage.py makemigrations {본인 앱 이름}
  




3. Db 와 마이그레이션 진행하기



  python manage.py migrate {본인 앱 이름}
  
  
    마이그레이션 시에 어떤 Sql 문 실행되었는지 확인하기

      python manage.py sqlmigate {본인 앱 이름} { initial 된 마이그레이션 번호 }
      
    
    Db 에서 마이그레이션 잘 되었는지 확인하기

  



    </summary>
  

  </entry>

  
  <entry>
    <title>Django 에 App 등록하기</title>
    <link href="http://localhost:4000/posts/django-app-config/" rel="alternate" type="text/html" title="Django 에 App 등록하기" />
    <published>2023-12-27T00:00:00+09:00</published>
  
    <updated>2023-12-27T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/django-app-config/</id>
    <content src="http://localhost:4000/posts/django-app-config/" />
    <author>
      <name>Kimjeju</name>
    </author>

  
    
    <category term="Python" />
    
    <category term="Django" />
    
  

  
    <summary>
      





      Mac 환겅

1. manage.py startapp 을 통해 app 만들기





python manage.py startapp {본인 앱 명}



  
    
명령어 실행화면
    
앱 생성
  








2.setting.py 에 앱등록하기


  
    setting.py -&amp;gt; installed_app 에 만든 앱 등록
  




3. 앱 이름 사전에 등록하기

  
  
    밑줄이 쳐져있는 앱 이름에 alt + enter or command + enter 를 통해 사전에 등록해주기
  



    </summary>
  

  </entry>

  
  <entry>
    <title>mac 환경에 Django 세팅하기</title>
    <link href="http://localhost:4000/posts/mac-django-setting-copy/" rel="alternate" type="text/html" title="mac 환경에 Django 세팅하기" />
    <published>2023-12-20T00:00:00+09:00</published>
  
    <updated>2023-12-20T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/mac-django-setting-copy/</id>
    <content src="http://localhost:4000/posts/mac-django-setting-copy/" />
    <author>
      <name>Kimjeju</name>
    </author>

  
    
    <category term="Python" />
    
    <category term="Django" />
    
  

  
    <summary>
      





      Mac 환겅

  
    M2 맥북 에어
    mac os Sonoma 14.2
    python 3.9.6
    터미널 zsh

  




1.Python 설치하기

  
    
      pythone 설치 여부 확인

    
    깔려있지 않다면 아래 링크에서 설치하기
      
        python 공식 다운로드 (필자 3.9.6 설치)
        python 공홈
      
    
    python3 명령어를 python 으로 바꾸기 위해 환경변수 설정
      
        터미널에서 vi~/.zshrc 실행 후 아래 코드 입력
        vi 환경에서 a 를 눌러 input 환경으로 만든 후 맨 아레에 작성 후 esc 누르고 wq( 입력저장 )로 빠져나...
    </summary>
  

  </entry>

  
  <entry>
    <title>리액트 프로젝트 깃허브 페이지로 배포하기</title>
    <link href="http://localhost:4000/posts/react-deploy-github-page-copy/" rel="alternate" type="text/html" title="리액트 프로젝트 깃허브 페이지로 배포하기" />
    <published>2023-12-17T00:00:00+09:00</published>
  
    <updated>2023-12-17T00:00:00+09:00</updated>
  
    <id>http://localhost:4000/posts/react-deploy-github-page-copy/</id>
    <content src="http://localhost:4000/posts/react-deploy-github-page-copy/" />
    <author>
      <name>Kimjeju</name>
    </author>

  
    
    <category term="Blog" />
    
    <category term="gitblog" />
    
  

  
    <summary>
      





      리액트 프로젝트 깃 허브 페이지 배포 step


  gh-page 라이브러리 설치하기
  
    
      본인의 패키지에 맞게 아래 두 커맨드 리액트 프로젝트 폴더 cmd 에서 실행
    
    npm install gh-pages –save
    yarm install gh-pages 

npm install gh-pages –save 실행화면
  





  package.json 파일에 본인의 레파지토리 주소 및 npm script 추가하기
  
    
      package.js 최상단의   “homepage”: “https://{본인 깃허브 이름}.github.io/{본인 레포지토리 이름}/” 작성

package.json 에 깃주소 추가
    
    
      scri...
    </summary>
  

  </entry>

  
  <entry>
    <title>chirpy 템플릿 프로필 image url 설정하기</title>
    <link href="http://localhost:4000/posts/react-image-url-modify-copy/" rel="alternate" type="text/html" title="chirpy 템플릿 프로필 image url 설정하기" />
    <published>2023-12-15T00:00:00+09:00</published>
  
    <updated>2023-12-18T00:20:47+09:00</updated>
  
    <id>http://localhost:4000/posts/react-image-url-modify-copy/</id>
    <content src="http://localhost:4000/posts/react-image-url-modify-copy/" />
    <author>
      <name>Kimjeju</name>
    </author>

  
    
    <category term="Blog" />
    
    <category term="gitblog" />
    
  

  
    <summary>
      





      chirpy 템플릿 Image Url 설정하기

깃 블로그를 만드는 도중 avarta 와 image가 올라가지 않는 현상이 발생해서
원인을 찾고 Url를 설정해서 이미지를 올리는 작업 진행




  ■ Image 가 올라가지 않은 원인
  
    Config.yml 의 이미지 기본 url 이 “https://chirpy-img.netlify.app” 으로 설정 되어있음
    “assets/img/[source]” 로 img url을 설정해도 “ “https://chirpy-img.netlify.app/assets/~ 으로 설정됨”
  







  ■ 해결
  
    Config.yml 의 이미지 기본 url 수정
    Config_yml 62번줄 수정
  


Config.yml 수정부분...
    </summary>
  

  </entry>

</feed>


