[
  
  {
    "title": "리액트 모달 만들어보기",
    "url": "/posts/react-create-modal/",
    "categories": "Dev, react",
    "tags": "react, javascript",
    "date": "2023-12-10 09:00:00 +0900",
    





    
    "snippet": "포트폴리오 경력사항 작성을 위한 모달 창 구현해보기  ■ 상태 라이브러리를 통한 show 모달 상태 관리      UseState 를 사용하여 모달에 show 여부를 저장    showModal 함수와 button을 통해 show modal 이벤트 트리거 발생 시키기  코드function Intro(){    //Modal 영역    const [ o...",
    "content": "포트폴리오 경력사항 작성을 위한 모달 창 구현해보기  ■ 상태 라이브러리를 통한 show 모달 상태 관리      UseState 를 사용하여 모달에 show 여부를 저장    showModal 함수와 button을 통해 show modal 이벤트 트리거 발생 시키기  코드function Intro(){    //Modal 영역    const [ openModal, setOpenModal ] = useState(false);    //모달의 open, hide 속성을 담당할 메서드    function showModal(){        //console.log 로 이벤트 발생 여부 확인해보기        alert(\"모달 이벤트 발생\");        setOpenModal(true);    }    return (        &lt;div className=\"intro-body\"&gt;            &lt;div className=\"intro-left-body\"&gt;                    ㅎㅇ            &lt;/div&gt;            &lt;div className=\"intro-right-body\"&gt;                    &lt;button onClick={showModal}&gt;View More&lt;/button&gt;                                         //oe                     {openModal &amp;&amp; &lt;ModalPage setOpenModal={setOpenModal} /&gt;}            &lt;/div&gt;        &lt;/div&gt;    )}import styled from \"styled-components\";const Button = styled.button`    background-color : #3A00F5;     color : white;    border : none;    width : 10rem;    height : 50px;    font-size : 15px;    transition : 0.5s;    margin-top : 20px;    border-radius : 5px;    &amp;:hover{        background-color : white;        border-radius : 25px;        color : black;    }`  ■ 모달페이지 ( 자식 요소 ) 에 props로 상태 전달 및 창 띄우기      필자의 경우 ModalPage 라는 js 페이지를 하나만든 후 prop로 Modal 상태 전달    close Modal 이라는 함수를 버튼 이벤트로 등록해 X 버튼을 누를 시 부모요소에게 false 를 전달 이 후 모달창이 꺼지도록 함    style component 를 사용해 modal 최상단에 위치  코드import { useState } from \"react\"import ModalPage from \"../Modal/ModalPage\";function ModalPage({ setOpenModal }) {    function closeModal() {        setOpenModal(false);    }    return (        &lt;Background&gt;            &lt;OpenContainer&gt;                &lt;Close onClick={closeModal}&gt; X &lt;/Close&gt;            &lt;/OpenContainer&gt;        &lt;/Background&gt;    )}스타일import styled from \"styled-components\";//뒷배경 어둡게 해주기const Background = styled.div`    position : fixed;    top : 0;    left : 0;    width : 100vw;    height : 100vh;    background-color : rgba(0,0,0,0.8);    z-index : 100;`//모달 최상단 위치 시켜주기const OpenContainer = styled.div`    width: 40rem;    height : 40rem;    background-color : black;    //최상단 위치    z-index : 999;    //가운데 위치 시키기    position : absolute;    top : 50%;    left : 50%;    transform : translate(-50%, -50%);    border : 1px solid white;    transition : 0.5s;    &amp;:hover{        box-shadow: 10px 10px white;    }`//닫기 버튼const Close = styled.button`    // 버튼 오른쪽 최상단에 위치하도록 만들어주기    position : absolute;    top : 10px;    right : 10px;        //디자인 영역    transition : 0.5s;    width : 25px;    height : 25px;    transition : 0.5s;    background-color : #3A00F5;    color : white;    border : none;    &amp;:hover{        background-color : white;        color : black;    }`"
  },
  
  {
    "title": "git fatal : the remote end hung up unexpected 에러 핸들링",
    "url": "/posts/git-fatal-the-remote-end-hung-up-unexpectedly-error/",
    "categories": "Git, Error Handling",
    "tags": "git, github, error",
    "date": "2023-12-10 09:00:00 +0900",
    





    
    "snippet": "문제  깃허브에 Port Folio 관련 소스를 업데이트 도중 git fatal : the remote end hung up unexpected 에러 발생  원인 : 단일 파일 Post 최대 용량이 1MB 인데 Fort Polio 소스 내 동영상 파일이 1MB를 초과하여 발생해결방안  깃허브 단일 파일 최대 Post 용량의 제한을 늘려준다방법     ...",
    "content": "문제  깃허브에 Port Folio 관련 소스를 업데이트 도중 git fatal : the remote end hung up unexpected 에러 발생  원인 : 단일 파일 Post 최대 용량이 1MB 인데 Fort Polio 소스 내 동영상 파일이 1MB를 초과하여 발생해결방안  깃허브 단일 파일 최대 Post 용량의 제한을 늘려준다방법      터미널 콘솔창에 아래와 같은 명령어를 입력해준다.    아래 코드는 깃 Post 단일 용량 제한을 늘려주는 코드이다.    본인의 기호에 맞게 원하는 용량을 http.postBuffer 뒤에 지정할 수 도 있다  git config --global http.postBuffer 1024MB  참고 자료      https://choitaetae.tistory.com/123 블로그  "
  },
  
  {
    "title": "Boolean 자료형과 Interger 자료형",
    "url": "/posts/java-boolean-and-interger/",
    "categories": "Dev, C#",
    "tags": "C#, development",
    "date": "2023-12-10 09:00:00 +0900",
    





    
    "snippet": "■ my Char Runner  기능 : myCharClass의 기능들을 작동시킬 수 있다.■ 메인 메서드를 선언해 줌으로서 myChar 클래스의 메서드를 작동시킬 수 있다.■ myChar 오브젝트를 new myChar 클래스에 선언해 줌으로서 charactor 파라미터를 받을 수 있다.■ System.out.println()을 선언해 줌으로 myCh...",
    "content": "■ my Char Runner  기능 : myCharClass의 기능들을 작동시킬 수 있다.■ 메인 메서드를 선언해 줌으로서 myChar 클래스의 메서드를 작동시킬 수 있다.■ myChar 오브젝트를 new myChar 클래스에 선언해 줌으로서 charactor 파라미터를 받을 수 있다.■ System.out.println()을 선언해 줌으로 myCharClass안에 메서드들을 로그에 출력할 수 있다.public class myCharRunner {\tpublic static void main(String[] args) {\t\t\t  myChar myChar = new myChar('c');\t  System.out.println(myChar.isVowel());\t  \t  \t  // myChar에서 받은 레터럴값이 숫자인지 알파벳인지 boolean 값으로 출력\t  System.out.println(myChar.isNumber());\t  System.out.println(myChar.isAlphabet());\t  \t  // 반환되는 레터럴값이 소문자거나 대문자일 경우 엮으로 바꿔주고 출력\t  System.out.println(\"\");\t  myChar.printLowerCaseAlphabets();\t  myChar.printUpperCaseAlphabets();\t}}■ my Char Classs  기능 : myCharRunner에 기능들을 구현 할 수 있다.■ 메서드를 만들어 줌 으로서  myCharRunner  메인메서드를 작동시킬 수 있다.■ myCharClass안에 다양한 메서드들을 제작할 수 있다.■ 다양한 문법을 활용해 경우의 수를 제작할 수 있다.클래스 및 생성자 선언// 대문자 65 ~ 90public class myChar {\tprivate char ch;\t\tpublic myChar(char ch) {\t\tthis.ch = ch;\t}  private char 을 선언해줌으로서 charactor형 상수 선언  public 형으로 생성자 선언isVowel 메서드// 리터럴 값이 모음인지를 판단\tpublic boolean isVowel() {\t\t// a e i o u or A E I O U\t\tif(ch == 'a' || ch == 'e' || ch == 'i' ||ch ==  'o' ||ch ==  'u' ||\t\t\t\tch == 'A' || ch == 'E' || ch == 'I' || ch == 'O' || ch == 'U')\t\treturn true;\t\t\t\telse\t\treturn false;\t}  public boolean 으로 메서드 생성  if문을 통한 자음 판별isNumber 메서드\t// 리터럴값의 숫자 여부 판단\tpublic boolean isNumber() {\t\t\tfor(char i = 48; i &lt;= 57; ++i ) {\t\t\t\tif(this.ch == i)\t\t\t\treturn true;\t\t\t}\t\t\t\t\t\treturn false;\t}  for문에 유니코드 값 48(0) ~ 57(0) 을 지정해 줌으로서 this.ch 즉 지역변수가 숫자값인지 판별isAlparbet 메서드// 리터럴값의 알파벳 여부판단\tpublic boolean isAlphabet() {\t\t for(char i = 65; i &lt;= 90; ++i ) \t\t {\t\t\tif(this.ch == i + 32 || this.ch == i)\t\t\treturn true; \t\t }\t\t return false;\t}  for문에 유니코드 값 65(a) ~ 57(b) 을 지정해 줌으로서 this.ch 즉 지역변수가 숫자값인지 판별  if문 내부코드 this.ch값 = i(for문 횟수) + 32를 하면 아스키 소문자 값이 나옴printLowerCaseAlphabets 메서드public void printLowerCaseAlphabets() {\t\tfor(char i = 65; i &lt;= 90; ++i)\t\t{ \t\t\tif(this.ch == i) {\t\t\t\tthis.ch = (char)(this.ch + 32);\t\t\t\tSystem.out.println(ch);\t\t\t\tbreak;\t\t\t}\t\t\t\t\t}\t}  대문자 아스키 코드 포문을 돈 후에 if문 안으로 진입할 시 즉 아스키 코드가 대문자 일 시 + 32를 해줘 소문자로 변환  Sysout을 이용 출력 후 브레이크print UpperCase Alphabets 메서드public void printUpperCaseAlphabets() {\t\tfor(char i = 97; i &lt;= 122; ++i )\t\t\tif(this.ch == i) {\t\t\t\tthis.ch = (char)(this.ch - 32);\t\t\t\tSystem.out.println(ch);\t\t\t\tbreak;\t\t\t}\t\t}"
  },
  
  {
    "title": "테스트 게시글 입니닷!",
    "url": "/posts/first-write-post/",
    "categories": "Dev, tests",
    "tags": "use_for_test, development",
    "date": "2023-12-10 09:00:00 +0900",
    





    
    "snippet": "첫 게시글 테스트입니다.본 게시물은 카테고리와 태그 테스트를 위한 게시글입니다.",
    "content": "첫 게시글 테스트입니다.본 게시물은 카테고리와 태그 테스트를 위한 게시글입니다."
  }
  
]

