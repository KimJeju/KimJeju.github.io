[
  
  {
    "title": "Django Env 세팅하기",
    "url": "/posts/django-env-setting/",
    "categories": "Python, Django",
    "tags": "python, Django",
    "date": "2023-12-28 00:00:00 +0900",
    





    
    "snippet": "네이버 SMTP 메일 Send를 위한 Django .env 설정1. requirements.txt 를 통해 django environ 설치        requirements.txt 에 django-environ 을 기입하면 자동설치가 된다.  2.최상위 폴더에 .env 생성 및 config 정의      최상위 폴더에 .env 생성          ...",
    "content": "네이버 SMTP 메일 Send를 위한 Django .env 설정1. requirements.txt 를 통해 django environ 설치        requirements.txt 에 django-environ 을 기입하면 자동설치가 된다.  2.최상위 폴더에 .env 생성 및 config 정의      최상위 폴더에 .env 생성                            .env 내부에 필요한 정보사항 작성 ( 필자의 경우 네이버 SMTP 정보작성 )  # env 작성시에는 띄어쓰기가 없어야함EMAIL_HOST=smtp.naver.comEMAIL_PORT=000EMAIL_USE_SSL=TrueEMAIL_HOST_USER=test@naver.comEMAIL_HOST_PASSWORD=aaaaaaaa3.settings.py 에 .env 정보를 가져올 수 있는 코드 작성import environfrom environ import Env# 파일의 최상위 폴더BASE_DIR = Path(__file__).resolve().parent.parentenv = Env()#최상위 폴더의 \".env\" 파일을 읽는다.env_path = BASE_DIR / \".env\"## 만약 env 정보가 존재한다면 읽기쓰기 권한으로 .env 를열고 # overwrite=True 를 사용해 기존 정보를 덮어쓴다.if env_path.exists():    with env_path.open(\"rt\", encoding=\"utf8\") as f:        env.read_env(f, overwrite=True)4. settings.py 최하단에 env 정보 기입해주기# email configEMAIL_HOST = env.str(\"EMAIL_HOST\")EMAIL_PORT = env.int(\"EMAIL_PORT\")EMAIL_USE_SSL = env.bool(\"EMAIL_USE_SSL\")EMAIL_HOST_USER = env.str(\"EMAIL_HOST_USER\")EMAIL_HOST_PASSWORD = env.str(\"EMAIL_HOST_PASSWORD\")DEFAULT_FROM_EMAIL = f\"{EMAIL_HOST_USER}@naver.com\"      각각의 데이터 타입에 맞는 env 정보를 key값을 통해 가져온다  "
  },
  
  {
    "title": "Django Model 마이그레이션 해보기",
    "url": "/posts/django-db-migration/",
    "categories": "Python, Django",
    "tags": "python, Django",
    "date": "2023-12-27 00:00:00 +0900",
    





    
    "snippet": "1.Python 설치하기      models.py 에 모델 클래스 정의  2.manage.py 가 있는 폴더에서 마이그레이션 만들기  python manage.py makemigrations {본인 앱 이름}  3. Db 와 마이그레이션 진행하기  python manage.py migrate {본인 앱 이름}        마이그레이션 시에 어떤 Sq...",
    "content": "1.Python 설치하기      models.py 에 모델 클래스 정의  2.manage.py 가 있는 폴더에서 마이그레이션 만들기  python manage.py makemigrations {본인 앱 이름}  3. Db 와 마이그레이션 진행하기  python manage.py migrate {본인 앱 이름}        마이그레이션 시에 어떤 Sql 문 실행되었는지 확인하기      python manage.py sqlmigate {본인 앱 이름} { initial 된 마이그레이션 번호 }              Db 에서 마이그레이션 잘 되었는지 확인하기  "
  },
  
  {
    "title": "Django 에 App 등록하기",
    "url": "/posts/django-app-config/",
    "categories": "Python, Django",
    "tags": "python, Django",
    "date": "2023-12-27 00:00:00 +0900",
    





    
    "snippet": "Mac 환겅1. manage.py startapp 을 통해 app 만들기python manage.py startapp {본인 앱 명}      명령어 실행화면    앱 생성  2.setting.py 에 앱등록하기      setting.py -&gt; installed_app 에 만든 앱 등록  3. 앱 이름 사전에 등록하기        밑줄이 쳐져있...",
    "content": "Mac 환겅1. manage.py startapp 을 통해 app 만들기python manage.py startapp {본인 앱 명}      명령어 실행화면    앱 생성  2.setting.py 에 앱등록하기      setting.py -&gt; installed_app 에 만든 앱 등록  3. 앱 이름 사전에 등록하기        밑줄이 쳐져있는 앱 이름에 alt + enter or command + enter 를 통해 사전에 등록해주기  "
  },
  
  {
    "title": "Django 부트스트랩 추가해보기",
    "url": "/posts/django-add-bootstrap5/",
    "categories": "Python, Django",
    "tags": "python, Django",
    "date": "2023-12-27 00:00:00 +0900",
    





    
    "snippet": "1. 프로젝트 최상위 폴더에 requirements.txt 추가      requirements.txt 는 Django 부트스트랩에 텍스트형식 패키지 관리 시스템이다.    프로젝트 최상위 폴더에 추가해준다.                          2.requirements.txt 에 bootstrap5 추가 및 인스톨      requireme...",
    "content": "1. 프로젝트 최상위 폴더에 requirements.txt 추가      requirements.txt 는 Django 부트스트랩에 텍스트형식 패키지 관리 시스템이다.    프로젝트 최상위 폴더에 추가해준다.                          2.requirements.txt 에 bootstrap5 추가 및 인스톨      requirements.txt 에 django-bootstrap5 입력    bootstarp5 설치          3. 사용할 html 파일에 bootstrap 로드      bootstrap 로드하기                            bootstrap form 정의하기                          4. view 함수 정의하기      이번엔 람다식으로 정의                          5. Main 앱의 urls 에 url 연결해주기      사용한 url과 함수를 parameter로 넘겨준다                            페이지 잘 로드 되는지 확인                          "
  },
  
  {
    "title": "mac 환경에 Django 세팅하기",
    "url": "/posts/mac-django-setting-copy/",
    "categories": "Python, Django",
    "tags": "python, Django",
    "date": "2023-12-20 00:00:00 +0900",
    





    
    "snippet": "Mac 환겅      M2 맥북 에어    mac os Sonoma 14.2    python 3.9.6    터미널 zsh  1.Python 설치하기            pythone 설치 여부 확인        깔려있지 않다면 아래 링크에서 설치하기              python 공식 다운로드 (필자 3.9.6 설치)        python...",
    "content": "Mac 환겅      M2 맥북 에어    mac os Sonoma 14.2    python 3.9.6    터미널 zsh  1.Python 설치하기            pythone 설치 여부 확인        깔려있지 않다면 아래 링크에서 설치하기              python 공식 다운로드 (필자 3.9.6 설치)        python 공홈              python3 명령어를 python 으로 바꾸기 위해 환경변수 설정              터미널에서 vi~/.zshrc 실행 후 아래 코드 입력        vi 환경에서 a 를 눌러 input 환경으로 만든 후 맨 아레에 작성 후 esc 누르고 wq( 입력저장 )로 빠져나오기          alias python=\"python3\"# Setting PATH for Python 3.9export PATH=\"/Library/Frameworks/Python.framework/Version/3.9/bin:${PATH}\"                              2.가상환경 구축하기      가상환경을 구축하는 이유                  프로젝트마다 격리된 환경을 구축해 프로젝트별 패키지를 관리하기 위함                            진행하는 프로젝트에서 필요로하는 버전의 패키지만 설치 구성 하기 위함                            차 후 더 추가 예정                  virtualenvwrapper 설치      // 내 맥 기준 pip 뒤에 3을 안붙여주면 커맨드를 찾지 못한다.sudo pip3 install virtualenvwrapper              다시 vi~/.zshrc 를 터미널에서 실행해 아래 환경변수 추가      export WORKON_HOME=$HOME/.virtualenvsexport VIRTUALENVWRAPPER_PYTHON=/usr/bin/python3export PROJECT_HOME=$HOME/Develsource /usr/local/bin/virtualenvwrapper.sh                    터미널에서 source ~/.zshrc 실행  3.가상환경 생성      가상환경 생성      mkvirtualenv 가상환경명              가상환경 활성화      workon 가상환경명            가상환경 실행화면      4.가상환경에 Django 설치      장고설치      pip3 install django              장고 버전 확인      python -m django --version                    장고 프로젝트 생성      django-admin startproject 플젝이름               프로젝트 생성 폴더에 setting.py =&gt; Timezone 설정    프로젝트 폴더로 가서 프로젝트 실행      python manage.py runserver            5. 실행확인      터미널 상에 실행 url 입력 및 확인  "
  },
  
  {
    "title": "리액트 프로젝트 깃허브 페이지로 배포하기",
    "url": "/posts/react-deploy-github-page-copy/",
    "categories": "Blog, gitblog",
    "tags": "git",
    "date": "2023-12-17 00:00:00 +0900",
    





    
    "snippet": "리액트 프로젝트 깃 허브 페이지 배포 step  gh-page 라이브러리 설치하기            본인의 패키지에 맞게 아래 두 커맨드 리액트 프로젝트 폴더 cmd 에서 실행        npm install gh-pages –save    yarm install gh-pages npm install gh-pages –save 실행화면    pac...",
    "content": "리액트 프로젝트 깃 허브 페이지 배포 step  gh-page 라이브러리 설치하기            본인의 패키지에 맞게 아래 두 커맨드 리액트 프로젝트 폴더 cmd 에서 실행        npm install gh-pages –save    yarm install gh-pages npm install gh-pages –save 실행화면    package.json 파일에 본인의 레파지토리 주소 및 npm script 추가하기            package.js 최상단의   “homepage”: “https://{본인 깃허브 이름}.github.io/{본인 레포지토리 이름}/” 작성package.json 에 깃주소 추가              scripts 블럭안에 “predeploy”: “npm run build”, “deploy”: “gh-pages -d build” 두 스크립트 추가package.json 에 script 추가        build script 실행      추가한 script “npm run deploy” 실행script 실행 화면    github page 에 빌드 배포            본인의 레포지토리에 setting 들어가기              pages 에 들어가기              npm run deploy 실행 시 생성되는 gh-pages 브랜치로 변경하기              git에 프로젝트 소스 올리기        github action에서 파이프라인 확인하기  github action에서 파이프라인 확인하기##"
  },
  
  {
    "title": "chirpy 템플릿 프로필 image url 설정하기",
    "url": "/posts/react-image-url-modify-copy/",
    "categories": "Blog, gitblog",
    "tags": "git",
    "date": "2023-12-15 00:00:00 +0900",
    





    
    "snippet": "chirpy 템플릿 Image Url 설정하기깃 블로그를 만드는 도중 avarta 와 image가 올라가지 않는 현상이 발생해서원인을 찾고 Url를 설정해서 이미지를 올리는 작업 진행  ■ Image 가 올라가지 않은 원인      Config.yml 의 이미지 기본 url 이 “https://chirpy-img.netlify.app” 으로 설정 되어...",
    "content": "chirpy 템플릿 Image Url 설정하기깃 블로그를 만드는 도중 avarta 와 image가 올라가지 않는 현상이 발생해서원인을 찾고 Url를 설정해서 이미지를 올리는 작업 진행  ■ Image 가 올라가지 않은 원인      Config.yml 의 이미지 기본 url 이 “https://chirpy-img.netlify.app” 으로 설정 되어있음    “assets/img/[source]” 로 img url을 설정해도 “ “https://chirpy-img.netlify.app/assets/~ 으로 설정됨”    ■ 해결      Config.yml 의 이미지 기본 url 수정    Config_yml 62번줄 수정  Config.yml 수정부분theme_mode: dark # [light|dark] # The CDN endpoint for images.# Notice that once it is assigned, the CDN url# will be added to all image (site avatar &amp; posts' images) paths starting with '/'## e.g. 'https://cdn.com'// 이부분img_cdn: \"https://chirpy-img.netlify.app\"# the avatar on sidebar, support local or CORS resourcesavatar: \"/assets/img/source/avartar.png\"# boolean type, the global switch for TOC in posts.toc: trueTotheme_mode: dark # [light|dark] # The CDN endpoint for images.# Notice that once it is assigned, the CDN url# will be added to all image (site avatar &amp; posts' images) paths starting with '/'## e.g. 'https://cdn.com'// 빈공백으로 설정하면 local folder를 참조img_cdn: \"\"# the avatar on sidebar, support local or CORS resourcesavatar: \"/assets/img/source/avartar.png\"# boolean type, the global switch for TOC in posts.toc: true프로필 업로드 확인"
  },
  
  {
    "title": "동적 웹페이즈 사이즈 계산",
    "url": "/posts/react-dynamic-width/",
    "categories": "Dev, react",
    "tags": "react, javascript",
    "date": "2023-12-12 00:00:00 +0900",
    





    
    "snippet": "동적 웹 페이지 크기 계산해보기포트폴리오를 만드는 도중 OverFlow : scroll 이 두개의 컴포넌트에서 각각 작동하다보니width가 작아짐에 따라 후자 컴포넌트가 원하는 대로 작동하지 않는 현상이 발생하였다.이를 해결하기 위해 UseEffect를 사용하여 현재 웹페이지의 크기를 동적으로 계산하여 조건문을 통하여 동적 컴포넌트 랜더링을 진행하였다...",
    "content": "동적 웹 페이지 크기 계산해보기포트폴리오를 만드는 도중 OverFlow : scroll 이 두개의 컴포넌트에서 각각 작동하다보니width가 작아짐에 따라 후자 컴포넌트가 원하는 대로 작동하지 않는 현상이 발생하였다.이를 해결하기 위해 UseEffect를 사용하여 현재 웹페이지의 크기를 동적으로 계산하여 조건문을 통하여 동적 컴포넌트 랜더링을 진행하였다.  ■ UseEffect를 사용하여 현재 웹페이지의 크기 동적 계산      UseState 를 사용하여 현재 웹페이지값 상태로 저장    자바 스크립트 내장함수 window를 통하여 width값을 가져왔다.  코드function MyCareer() {    const [innerWidth, setInnerWidth] = useState(window.innerWidth);    useEffect(() =&gt; {        const resizeListener = () =&gt; {            setInnerWidth(window.innerWidth);        };        window.addEventListener(\"resize\", resizeListener);    });    console.log(\"innerWidth\", innerWidth);    if (innerWidth &lt; 800) {        return (            &lt;CareerContainerMaxWidth800 className=\"openContainer\"&gt;                &lt;About /&gt;                &lt;Position /&gt;                &lt;Stack /&gt;            &lt;/CareerContainerMaxWidth800&gt;        )    } else {        return (            &lt;CareerContainer className=\"openContainer\"&gt;                &lt;About /&gt;                &lt;Position /&gt;                &lt;Stack /&gt;            &lt;/CareerContainer&gt;        )    }}export default MyCareer"
  },
  
  {
    "title": "리액트 모달 만들어보기",
    "url": "/posts/react-create-modal/",
    "categories": "Dev, react",
    "tags": "react, javascript",
    "date": "2023-12-10 00:00:00 +0900",
    





    
    "snippet": "포트폴리오 경력사항 작성을 위한 모달 창 구현해보기  ■ 상태 라이브러리를 통한 show 모달 상태 관리      UseState 를 사용하여 모달에 show 여부를 저장    showModal 함수와 button을 통해 show modal 이벤트 트리거 발생 시키기  코드function Intro(){    //Modal 영역    const [ o...",
    "content": "포트폴리오 경력사항 작성을 위한 모달 창 구현해보기  ■ 상태 라이브러리를 통한 show 모달 상태 관리      UseState 를 사용하여 모달에 show 여부를 저장    showModal 함수와 button을 통해 show modal 이벤트 트리거 발생 시키기  코드function Intro(){    //Modal 영역    const [ openModal, setOpenModal ] = useState(false);    //모달의 open, hide 속성을 담당할 메서드    function showModal(){        //console.log 로 이벤트 발생 여부 확인해보기        alert(\"모달 이벤트 발생\");        setOpenModal(true);    }    return (        &lt;div className=\"intro-body\"&gt;            &lt;div className=\"intro-left-body\"&gt;                    ㅎㅇ            &lt;/div&gt;            &lt;div className=\"intro-right-body\"&gt;                    &lt;button onClick={showModal}&gt;View More&lt;/button&gt;                                         //oe                     {openModal &amp;&amp; &lt;ModalPage setOpenModal={setOpenModal} /&gt;}            &lt;/div&gt;        &lt;/div&gt;    )}import styled from \"styled-components\";const Button = styled.button`    background-color : #3A00F5;     color : white;    border : none;    width : 10rem;    height : 50px;    font-size : 15px;    transition : 0.5s;    margin-top : 20px;    border-radius : 5px;    &amp;:hover{        background-color : white;        border-radius : 25px;        color : black;    }`  ■ 모달페이지 ( 자식 요소 ) 에 props로 상태 전달 및 창 띄우기      필자의 경우 ModalPage 라는 js 페이지를 하나만든 후 prop로 Modal 상태 전달    close Modal 이라는 함수를 버튼 이벤트로 등록해 X 버튼을 누를 시 부모요소에게 false 를 전달 이 후 모달창이 꺼지도록 함    style component 를 사용해 modal 최상단에 위치  코드import { useState } from \"react\"import ModalPage from \"../Modal/ModalPage\";function ModalPage({ setOpenModal }) {    function closeModal() {        setOpenModal(false);    }    return (        &lt;Background&gt;            &lt;OpenContainer&gt;                &lt;Close onClick={closeModal}&gt; X &lt;/Close&gt;            &lt;/OpenContainer&gt;        &lt;/Background&gt;    )}스타일import styled from \"styled-components\";//뒷배경 어둡게 해주기const Background = styled.div`    position : fixed;    top : 0;    left : 0;    width : 100vw;    height : 100vh;    background-color : rgba(0,0,0,0.8);    z-index : 100;`//모달 최상단 위치 시켜주기const OpenContainer = styled.div`    width: 40rem;    height : 40rem;    background-color : black;    //최상단 위치    z-index : 999;    //가운데 위치 시키기    position : absolute;    top : 50%;    left : 50%;    transform : translate(-50%, -50%);    border : 1px solid white;    transition : 0.5s;    &amp;:hover{        box-shadow: 10px 10px white;    }`//닫기 버튼const Close = styled.button`    // 버튼 오른쪽 최상단에 위치하도록 만들어주기    position : absolute;    top : 10px;    right : 10px;        //디자인 영역    transition : 0.5s;    width : 25px;    height : 25px;    transition : 0.5s;    background-color : #3A00F5;    color : white;    border : none;    &amp;:hover{        background-color : white;        color : black;    }`"
  },
  
  {
    "title": "git fatal : the remote end hung up unexpected 에러 핸들링",
    "url": "/posts/git-fatal-the-remote-end-hung-up-unexpectedly-error/",
    "categories": "Git, Error Handling",
    "tags": "git, github, error",
    "date": "2023-12-10 00:00:00 +0900",
    





    
    "snippet": "문제  깃허브에 Port Folio 관련 소스를 업데이트 도중 git fatal : the remote end hung up unexpected 에러 발생  원인 : 단일 파일 Post 최대 용량이 1MB 인데 Fort Polio 소스 내 동영상 파일이 1MB를 초과하여 발생해결방안  깃허브 단일 파일 최대 Post 용량의 제한을 늘려준다방법     ...",
    "content": "문제  깃허브에 Port Folio 관련 소스를 업데이트 도중 git fatal : the remote end hung up unexpected 에러 발생  원인 : 단일 파일 Post 최대 용량이 1MB 인데 Fort Polio 소스 내 동영상 파일이 1MB를 초과하여 발생해결방안  깃허브 단일 파일 최대 Post 용량의 제한을 늘려준다방법      터미널 콘솔창에 아래와 같은 명령어를 입력해준다.    아래 코드는 깃 Post 단일 용량 제한을 늘려주는 코드이다.    본인의 기호에 맞게 원하는 용량을 http.postBuffer 뒤에 지정할 수 도 있다  git config --global http.postBuffer 1024MB  참고 자료      https://choitaetae.tistory.com/123 블로그  "
  },
  
  {
    "title": "Boolean 자료형과 Interger 자료형",
    "url": "/posts/java-boolean-and-interger/",
    "categories": "Dev, C#",
    "tags": "C#, development",
    "date": "2023-12-09 00:00:00 +0900",
    





    
    "snippet": "■ my Char Runner  기능 : myCharClass의 기능들을 작동시킬 수 있다.■ 메인 메서드를 선언해 줌으로서 myChar 클래스의 메서드를 작동시킬 수 있다.■ myChar 오브젝트를 new myChar 클래스에 선언해 줌으로서 charactor 파라미터를 받을 수 있다.■ System.out.println()을 선언해 줌으로 myCh...",
    "content": "■ my Char Runner  기능 : myCharClass의 기능들을 작동시킬 수 있다.■ 메인 메서드를 선언해 줌으로서 myChar 클래스의 메서드를 작동시킬 수 있다.■ myChar 오브젝트를 new myChar 클래스에 선언해 줌으로서 charactor 파라미터를 받을 수 있다.■ System.out.println()을 선언해 줌으로 myCharClass안에 메서드들을 로그에 출력할 수 있다.public class myCharRunner {\tpublic static void main(String[] args) {\t\t\t  myChar myChar = new myChar('c');\t  System.out.println(myChar.isVowel());\t  \t  \t  // myChar에서 받은 레터럴값이 숫자인지 알파벳인지 boolean 값으로 출력\t  System.out.println(myChar.isNumber());\t  System.out.println(myChar.isAlphabet());\t  \t  // 반환되는 레터럴값이 소문자거나 대문자일 경우 엮으로 바꿔주고 출력\t  System.out.println(\"\");\t  myChar.printLowerCaseAlphabets();\t  myChar.printUpperCaseAlphabets();\t}}■ my Char Classs  기능 : myCharRunner에 기능들을 구현 할 수 있다.■ 메서드를 만들어 줌 으로서  myCharRunner  메인메서드를 작동시킬 수 있다.■ myCharClass안에 다양한 메서드들을 제작할 수 있다.■ 다양한 문법을 활용해 경우의 수를 제작할 수 있다.클래스 및 생성자 선언// 대문자 65 ~ 90public class myChar {\tprivate char ch;\t\tpublic myChar(char ch) {\t\tthis.ch = ch;\t}  private char 을 선언해줌으로서 charactor형 상수 선언  public 형으로 생성자 선언isVowel 메서드// 리터럴 값이 모음인지를 판단\tpublic boolean isVowel() {\t\t// a e i o u or A E I O U\t\tif(ch == 'a' || ch == 'e' || ch == 'i' ||ch ==  'o' ||ch ==  'u' ||\t\t\t\tch == 'A' || ch == 'E' || ch == 'I' || ch == 'O' || ch == 'U')\t\treturn true;\t\t\t\telse\t\treturn false;\t}  public boolean 으로 메서드 생성  if문을 통한 자음 판별isNumber 메서드\t// 리터럴값의 숫자 여부 판단\tpublic boolean isNumber() {\t\t\tfor(char i = 48; i &lt;= 57; ++i ) {\t\t\t\tif(this.ch == i)\t\t\t\treturn true;\t\t\t}\t\t\t\t\t\treturn false;\t}  for문에 유니코드 값 48(0) ~ 57(0) 을 지정해 줌으로서 this.ch 즉 지역변수가 숫자값인지 판별isAlparbet 메서드// 리터럴값의 알파벳 여부판단\tpublic boolean isAlphabet() {\t\t for(char i = 65; i &lt;= 90; ++i ) \t\t {\t\t\tif(this.ch == i + 32 || this.ch == i)\t\t\treturn true; \t\t }\t\t return false;\t}  for문에 유니코드 값 65(a) ~ 57(b) 을 지정해 줌으로서 this.ch 즉 지역변수가 숫자값인지 판별  if문 내부코드 this.ch값 = i(for문 횟수) + 32를 하면 아스키 소문자 값이 나옴printLowerCaseAlphabets 메서드public void printLowerCaseAlphabets() {\t\tfor(char i = 65; i &lt;= 90; ++i)\t\t{ \t\t\tif(this.ch == i) {\t\t\t\tthis.ch = (char)(this.ch + 32);\t\t\t\tSystem.out.println(ch);\t\t\t\tbreak;\t\t\t}\t\t\t\t\t}\t}  대문자 아스키 코드 포문을 돈 후에 if문 안으로 진입할 시 즉 아스키 코드가 대문자 일 시 + 32를 해줘 소문자로 변환  Sysout을 이용 출력 후 브레이크print UpperCase Alphabets 메서드public void printUpperCaseAlphabets() {\t\tfor(char i = 97; i &lt;= 122; ++i )\t\t\tif(this.ch == i) {\t\t\t\tthis.ch = (char)(this.ch - 32);\t\t\t\tSystem.out.println(ch);\t\t\t\tbreak;\t\t\t}\t\t}"
  },
  
  {
    "title": "테스트 게시글 입니닷!",
    "url": "/posts/first-write-post/",
    "categories": "Dev, tests",
    "tags": "use_for_test, development",
    "date": "2023-12-09 00:00:00 +0900",
    





    
    "snippet": "첫 게시글 테스트입니다.본 게시물은 카테고리와 태그 테스트를 위한 게시글입니다.#####",
    "content": "첫 게시글 테스트입니다.본 게시물은 카테고리와 태그 테스트를 위한 게시글입니다.#####"
  }
  
]

